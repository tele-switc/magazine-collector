name: Magazine Article Collector

on:
  schedule:
    - cron: '0 1 * * *'  # UTC时间每天凌晨1点运行（北京时间9点）
  workflow_dispatch:       # 允许手动触发
  push:
    branches:
      - main              # 只在main分支推送时触发

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 步骤1: 检出本地仓库代码
      - name: Checkout local repository
        uses: actions/checkout@v4
        with:
          path: local_repo
          fetch-depth: 0  # 获取完整历史记录
          persist-credentials: false
          
      # 步骤2: 检出源仓库（包含LFS文件）
      - name: Checkout source repository with LFS
        uses: actions/checkout@v4
        with:
          repository: hehonghui/awesome-english-ebooks
          path: source_repo_1
          lfs: true
          ref: main       # 确保检出特定分支
          fetch-depth: 1  # 只获取最新提交

      # 验证步骤：确认文件路径
      - name: Validate script location
        run: |
          echo "工作区路径: $GITHUB_WORKSPACE"
          if [ -f "$GITHUB_WORKSPACE/local_repo/.github/scripts/collector.py" ]; then
            echo "✅ 脚本文件存在"
          else
            echo "❌ 脚本文件不存在！尝试查找"
            find . -name collector.py -print
            exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ebooklib beautifulsoup4 markdown2 jinja2
          
      # 修改后的关键步骤：使用动态路径执行脚本
      - name: Run collector script
        run: |
          SCRIPT_PATH=$(find . -path "*/local_repo/.github/scripts/collector.py" -print -quit)
          if [ -n "$SCRIPT_PATH" ]; then
            echo "运行脚本: $SCRIPT_PATH"
            python "$SCRIPT_PATH"
          else
            echo "::error::无法找到collector.py脚本"
            exit 1
          fi
        
      - name: List generated files
        run: ls -R ./docs

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
