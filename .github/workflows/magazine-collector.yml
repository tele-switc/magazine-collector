name: Magazine Article Collector

on:
  schedule:
    - cron: '0 1 * * *'  # UTC时间每天凌晨1点（北京时间9点）
  workflow_dispatch:     # 允许手动触发
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      WORKSPACE: ${{ github.workspace }}
    steps:
      # 步骤1: 检出本地仓库代码（主仓库）
      - name: Checkout local repository
        uses: actions/checkout@v4
        with:
          path: main_repo
          fetch-depth: 0
          
      # 步骤2: 检出源仓库（包含LFS）
      - name: Checkout source repository with LFS
        uses: actions/checkout@v4
        with:
          repository: hehonghui/awesome-english-ebooks
          path: source_repo_1
          lfs: true
          fetch-depth: 0
        
      # 工作区诊断步骤
      - name: Debug - Workspace Structure
        run: |
          echo "===== 工作区结构诊断 ====="
          echo "工作区根目录: $WORKSPACE"
          echo "内容:"
          ls -la
          echo ""
          echo "main_repo目录内容:"
          ls -la main_repo
          echo ""
          echo "main_repo/.github/scripts内容:"
          ls -la main_repo/.github/scripts || echo "⚠️ 脚本目录不存在"
          echo ""
          echo "tree -d结构:"
          tree -d -L 3 || echo "tree命令不可用"
          
      # Python环境设置
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      # 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ebooklib beautifulsoup4 markdown2 jinja2
          
      # 运行转换脚本
      - name: Run collector script
        run: |
          # 绝对路径保证执行
          SCRIPT_PATH="$WORKSPACE/main_repo/.github/scripts/collector.py"
          
          if [ -f "$SCRIPT_PATH" ]; then
            echo "✅ 找到脚本: $SCRIPT_PATH"
            python "$SCRIPT_PATH"
          else
            echo "::error::找不到collector.py脚本"
            echo "搜索所有位置:"
            find . -name "*.py"
            exit 1
          fi
        
      # 上传制品
      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
