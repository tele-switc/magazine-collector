name: Magazine Article Collector

on:
  schedule:
    - cron: '0 0 * * *' # 每天UTC时间0点运行(对应北京时间早上8点)
  workflow_dispatch:    # 允许手动触发
  push:
    branches:
      - main

jobs:
  collect:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步骤 1: 直接克隆目标仓库到名为 source_repo 的文件夹
      - name: Clone source repository
        run: git clone --depth 1 https://github.com/hehonghui/awesome-english-ebooks.git source_repo

      # 步骤 2: 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 步骤 3: 安装所有真正需要的依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install beautifulsoup4 ebooklib pdfplumber nltk markdown2 jinja2

      # 步骤 4: 运行已经清理干净的 Python 脚本
      - name: Run magazine collector script
        id: script-run
        run: python ./.github/scripts/collector.py

      # 步骤 5: 调试，查看生成了哪些文件
      - name: DEBUG - List all generated files
        if: always()
        run: ls -R

      # 步骤 6: 提交新生成的文章到 main 分支
      - name: Update repository with new content
        run: |
          git config --global user.name "GitHub Action Bot"
          git config --global user.email "action@github.com"
          # 检查 articles 文件夹是否有变化
          if ! git diff --quiet ./articles; then
            git add ./articles
            git commit -m "Update articles $(date +'%Y-%m-%d')"
            git push
          else
            echo "No new articles to commit."
          fi
          
      # 步骤 7: 将生成的网站部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: docs
          clean: true # 部署前清空旧文件，确保部署是干净的
